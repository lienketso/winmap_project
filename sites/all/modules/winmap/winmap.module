<?php


/* Load configs
 *
 * */
include(DRUPAL_ROOT."/sites/all/modules/winmap/winmap.config.php");
/* Load utilities
 *
 * */
include(DRUPAL_ROOT."/sites/all/modules/winmap/winmap.utilities.php");


function winmap_init() {
  drupal_add_js(drupal_get_path('module', 'winmap') . '/js/libs/number_format/number_format.js');
  drupal_add_css(drupal_get_path('module', 'winmap') . '/js/libs/jquery-confirm/jquery-confirm.min.css');;
  drupal_add_js(drupal_get_path('module', 'winmap') . '/js/libs/jquery-confirm/jquery-confirm.min.js');
}


/**
 * Implements hook_menu()
 */
function winmap_menu() {
  $items = array();
  $items['home'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'winmap_home_page_callback',
    'title' => t('Home'),
    'access arguments' => array('access content'),
    'file' => 'winmap.inc',
  );

  $items['admin/winmap/dashboard'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'winmap_dashboard_page_callback',
    'title' => t('Dashboard'),
    'access arguments' => array('winmap module'),
    'file' => 'winmap.inc',
  );

  $items['admin/config/winmap'] = array(
    'title' => 'winmap',
    'description' => 'winmap tools.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('winmap module'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/winmap/general'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('General configuration'),
    'page callback' => array('drupal_get_form'),
    'page arguments' => array('winmap_config_form'),
    'access arguments' => array('winmap module'),
    'file' => 'winmap.inc',
  );

  $items['winmap/ajax'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'winmap_ajax_page',
    'delivery callback' => 'drupal_json_output',
    'access arguments' => array('access content'),
    'file' => 'winmap.inc',
  );

  return $items;
}



/**
 * Implements hook_permission().
 */
function winmap_permission() {
  return array(
    'winmap module' => array(
      'title' => t('winmap module'),
      'description' => t('Access for winmap module'),
    )
  );
}

function _winmap_admin_theme() {
  return 'winmap_admin_theme';
}

// =----- alter -------------

/**
 * Implements hook_menu_alter().
 */
function winmap_menu_alter(&$items) {
  //  $items['taxonomy/term/%taxonomy_term']['module'] = 'winmap';
  $items['taxonomy/term/%taxonomy_term']['page callback'] = '_winmap_tvi_render_term_view';
  $items['taxonomy/term/%taxonomy_term']['page arguments'] = array(2);
  $items['node/%node']['page callback'] = '_winmap_node_render_view';
  $items['node/%node']['page arguments'] = array(1);
}

/**
 * Implements hook_variable_info().
 */

function winmap_variable_info($options) {
}


// =----- End alter -------------

function _winmap_node_render_view($node) {
  global $user;
  if (is_object($node)) {
    $nid = $node->nid;
  }
  else {
    $node = node_load($node);
  }
  if (module_exists('metatag')) {
    metatag_entity_view($node, 'node', 'full', NULL);
  }
  if ($node->type == 'article') {
    return _winmap_render_theme('module', 'winmap', 'templates/nodes/article.tpl.php', array('node' => $node));
  }
  return node_page_view($node);
}

function _winmap_tvi_render_term_view($term, $depth = NULL) {
  if (is_object($term)) {
    $tid = $term->tid;
  }
  else {
    $term = taxonomy_term_load($term);
  }
  if (module_exists('metatag')) {
    metatag_entity_view($term, 'taxonomy_term', 'full', NULL);
  }
  if ($term->vocabulary_machine_name == 'tx_article') {
    return _winmap_render_theme('module', 'winmap', 'templates/terms/article.tpl.php', array('term' => $term));
  }
  module_load_include('inc', 'taxonomy', 'taxonomy.pages');
  return taxonomy_term_page($term);
}


function winmap_theme($existing, $type, $theme, $path) {
  $themes = array(
    'winmap_table_drag_components' => array(
      'render element' => 'element'
    )
  );

  return $themes;
}

function theme_winmap_table_drag_components($vars) {
  $element = $vars['element'];
  drupal_add_tabledrag($vars['element']['#id'] . '-table', 'order', 'sibling', 'item-row-weight');

  $header = array(
    'label' => t('label'),
    'weight' => t('Weight'),
  );

  $rows = array();
  foreach (element_children($element) as $key) {
    $row = array();
    $row['data'] = array();
    foreach ($header as $fieldname => $title) {
      $row['data'][] = drupal_render($element[$key][$fieldname]);
      $row['class'] = array('draggable');
    }
    $rows[] = $row;
  }

  return theme('table', array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array('id' => $vars['element']['#id'] . '-table'),
  ));
}

function winmap_page_build(&$page) {
  global $user, $theme_key;
  if ( user_has_role(3) && $theme_key == 'winmap_theme') {
    $page['page_bottom']['cwinmap_admin_menu'] = array(
      '#markup' => '<div style="position: fixed; top: 40%; left: 10px; background: #ccc; border-radius: 5px; padding: 5px; z-index: 999;">'.l('Quản trị', 'admin/winmap/dashboard').'</div>'
    );
  }
}

// ----- api core ------

function winmap_array_clone($array)
{
  return array_map(function ($element) {
    return ((is_array($element)) ? winmap_array_clone($element) : ((is_object($element)) ? clone $element : $element));
  }, $array);
}
function _winmap_views_display($view_name, $display_id, $arg = array()) {
  $view = views_get_view($view_name);
  $output = "";
  if (!empty($view)) {
    $output = $view->execute_display($display_id, $arg);
    if (is_array($output)) {
      $output = $output['content'];
    }
    if (!$output && !count($view->result)) {
      $output = "";
    }
  }
  return $output;
}

function _winmap_render_theme($type, $name, $path, $variables = array()) {
  $path_temp = drupal_get_path($type, $name);
  return theme_render_template($path_temp . "/" . $path, $variables);
}


function _winmap_convert_time_ago($timestamp) {
  $_output = "";
  $day = $timestamp / (60 * 60 * 24);
  if ($day >= 365) {
    $_output = floor($day % 365) . ' năm trước';
  }
  elseif ($day >= 30 && $day < 365) {
    $_output = floor($day % 30) . ' tháng trước';
  }
  elseif ($day >= 1 && $day < 30) {
    $_output = floor($day % 30) . ' ngày trước';
  }
  elseif ($day > 0 && $day < 1) {
    if ($day * 24 >= 1) {
      $_output = floor($day * 24) . ' giờ trước';
    }
    elseif ($day * 24 * 60 > 1) {
      $_output = floor($day * 24 * 60) . ' phút trước';
    }
    else {
      $_output = floor($day * 24 * 60 * 60) . ' giây trước';
    }
  }
  return $_output;
}

function _winmap_load_collections ($collections) {
  $_collection = array();
  $_collection_ids = array();
  foreach ($collections as $_key => $_value) {
    $_collection_ids[] =  $_value['value'];
  }
  if(!empty($_collection_ids)) {
    $_collection = entity_load('field_collection_item', $_collection_ids);
  }
  return $_collection;
}


function winmap_mail($key, &$message, $params) {
//  switch ($key) {
//    case 'simplenews':
//      $headers = array(
//        'MIME-Version' => '1.0',
//        'Content-Type' => 'text/html; charset=utf-8; format=flowed',
//        'Content-Transfer-Encoding' => '8Bit',
//        'X-Mailer' => 'Drupal',
//      );
//      foreach ($headers as $key => $value) {
//        $message['headers'][$key] = $value;
//      }
//      $message['subject'] = 'Flybus đăng ký nhận tin';
//      $message['body'][] = _winmap_render_theme('module', 'winmap_simplenews', 'templates/emails/simplenews_email.tpl.php', array('data' => $params['data'])) ;
//      break;
//
//  }
}



function _winmap_rad ($x) {
  return $x * pi() / 180;
};

function _winmap_calculate_distance($point_from, $point_to) {
  $kmdistance = 0;
  try {
    $R = 6378137; // Earth’s mean radius in meter
    $dLat = _winmap_rad($point_from['lat'] - $point_to['lat']);
    $dLong = _winmap_rad($point_from['lng'] - $point_to['lng']);
    $a = sin($dLat / 2) * sin($dLat / 2) + cos(_winmap_rad($point_from['lat'])) * cos(_winmap_rad($point_from['lat'])) * sin($dLong / 2) * sin($dLong / 2);
    $c = 2 * atan2(sqrt($a), sqrt(1 - $a));
    $kmdistance = $R * $c;
  }
  catch (Exception $e) {

  }
  return $kmdistance;
}

function winmap_calculate_distance($point_from, $point_to, $key){
  $kmdistance = 0;
  try {
    $url = 'https://maps.googleapis.com/maps/api/directions/json?origin=' . $point_from['lat'] . ',' . $point_from['lng'] . '&destination=' . $point_to['lat'] . ',' . $point_to['lng'] . '&key='.$key;

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_PROXYPORT, 3128);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    $response = curl_exec($ch);
    curl_close($ch);
    $data = json_decode($response, true);

    if ($data['status'] == "OK") {
      if (!empty($data['routes'][0]['legs'][0]['distance']['value'])) {
        $kmdistance = $data['routes'][0]['legs'][0]['distance']['value'];
      }
      else {
        $kmdistance = _winmap_calculate_distance($point_from, $point_to);
      }
    }
    else {
      $kmdistance = _winmap_calculate_distance($point_from, $point_to);
    }
  }catch (Exception $e) {

    $kmdistance = _winmap_calculate_distance($point_from, $point_to);
    throw $e;
  }
  return $kmdistance;
}

function winmap_generate_string($length = 10) {
  $characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  $charactersLength = strlen($characters);
  $randomString = '';
  for ($i = 0; $i < $length; $i++) {
    $randomString .= $characters[rand(0, $charactersLength - 1)];
  }
  return $randomString;
}

function winmap_generate_integer($size = 13){
    $str  = '';
    $chars  = '0123456789';
    $_chars  = '123456789';
    for ($i = 0; $i < $size; $i++) {
        if($i == 0) {
            $str .= $_chars[rand(0,strlen($_chars) - 1)];
        }else {
            $str .= $chars[rand( 0, strlen($chars) - 1)];
        }
    }
    return $str;
};

function winmap_utf8convert($str) {
  if(!$str) return false;
  $utf8 = array(
    'a'=>'á|à|ả|ã|ạ|ă|ắ|ặ|ằ|ẳ|ẵ|â|ấ|ầ|ẩ|ẫ|ậ|Á|À|Ả|Ã|Ạ|Ă|Ắ|Ặ|Ằ|Ẳ|Ẵ|Â|Ấ|Ầ|Ẩ|Ẫ|Ậ',
    'd'=>'đ|Đ',
    'e'=>'é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ|É|È|Ẻ|Ẽ|Ẹ|Ê|Ế|Ề|Ể|Ễ|Ệ',
    'i'=>'í|ì|ỉ|ĩ|ị|Í|Ì|Ỉ|Ĩ|Ị',
    'o'=>'ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ|Ó|Ò|Ỏ|Õ|Ọ|Ô|Ố|Ồ|Ổ|Ỗ|Ộ|Ơ|Ớ|Ờ|Ở|Ỡ|Ợ',
    'u'=>'ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự|Ú|Ù|Ủ|Ũ|Ụ|Ư|Ứ|Ừ|Ử|Ữ|Ự',
    'y'=>'ý|ỳ|ỷ|ỹ|ỵ|Ý|Ỳ|Ỷ|Ỹ|Ỵ',
  );
  foreach($utf8 as $ascii=>$uni){
    $str = preg_replace("/($uni)/i",$ascii,$str);
  }
  return $str;
}


/* Load forms
 *
 *
 * */
include(DRUPAL_ROOT."/sites/all/modules/winmap/winmap.forms.php");








